name: Release

on:
  workflow_dispatch:
    inputs:
      goreleaser:
        description: Create Github release artifacts
        required: true
        type: boolean
      releaseType:
        description: Release type
        required: true
        type: choice
        options: [dev, release]

env:
  GO_VERSION: "1.18"

jobs:
  goreleaser:
    name: Create Github release
    runs-on: ubuntu-latest

    if: github.event.inputs.releaseType == 'release' && github.event.inputs.goreleaser

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: digineode/texd
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}
            latest

      - name: Release meta
        uses: actions/github-script@v6
        id: release-meta
        with:
          script: |
            const isRelease = context.payload.inputs.releaseType === 'release' ? '1' : '0'
            return { isRelease }

      - name: Docker image
        uses: docker/build-push-action@v3
        with:
          file: ./.github/Dockerfile.release
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
            IS_RELEASE=${{ steps.release-meta.outputs.result.isRelease }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
